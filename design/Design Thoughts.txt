Design Thoughts
===============

Separation of concerns
----------------------
- LessMS is just a CMS - can use web components in it or not
- Any web components used in content could be used in any other site
- Web components used in its implementation, but doesn't mean have to use them in content
- SO - put user web components elsewhere

Components
----------
- Non-UI web components should still have a debugging interface to show what going on, can be turned on and off
- Web components can have a standard prop setting interface, usable in CKEditor or elsewhere, that sets properties - and reflect in attribute
- Background web components should be visible in editing view, and show their settings
- When setting property to refer to another component by id, just click on it
- Linking components - by id or nesting or in content?
- Ways to edit structured data JSON files and store in CMS


- Data - JSON inline in host doc
- Data - references another file
- JSON Editor from JSON Schema, with undo by saving version each time it changes

Component editing
-----------------

- Use JSON editor with JSON Schema generated from property defs

Admin
-----
- Admin pages to view/adjust all users
- Instant setup scripts to create a bucket and set it up as your CMS

Single-user mode
----------------
- Everything directly under bucket root - good for standalone websites
- Still allow multiple users

Preview/publish
---------------
- Different bucket?
- Two copies?
- Redirect from preview unless edited version there
- Editor loads from preview (via redirect), writes back to preview
- Publish done in client or server - move each file and replace with redirect

Versioned mode
--------------
- Link to Github
- Could have several versions before publishing
- Linked to asset naming and optimisation

Optimisation
------------
- Gzip files in place on S3
- File sizes and other metadata in user data file
- Assets versioned when publish, long expiry
- Main files not versioned, but etag
